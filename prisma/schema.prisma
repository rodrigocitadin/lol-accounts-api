// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id               String  @id @default(uuid())
  username         String  @unique
  email            String  @unique
  verifiedEmail    Boolean @default(false)
  password         String
  owner            User    @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  ownerId          String
  sold             Boolean @default(false)
  region           Region  @default(BR)
  level            Int     @default(30)
  elo              Elo     @default(UNRANKED)
  blueEssence      Int
  skinQuantity     Int
  championQuantity Int
  price            Decimal @db.Decimal(9, 2)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Transaction Transaction?
}

model User {
  id       String    @id @default(uuid())
  username String    @unique
  email    String    @unique
  password String
  accounts Account[]
  role     Role      @default(USER)
  balance  Decimal   @default(0.00) @db.Decimal(9, 2)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  payedTransactions    UserTransaction[]
  receivedTransactions Transaction[]
}

model UserTransaction {
  id            String  @id @default(uuid())
  userId        String
  transactionId String  @unique
  ammount       Decimal

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user        User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  transaction Transaction @relation(fields: [transactionId], references: [id], onDelete: Cascade)
}

model Transaction {
  id        String  @id @default(uuid())
  payeeId   String
  accountId String  @unique
  ammount   Decimal

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  UserTransaction UserTransaction?

  user    User    @relation(fields: [payeeId], references: [id], onDelete: Cascade)
  account Account @relation(fields: [accountId], references: [id], onDelete: Cascade)
}

enum Elo {
  UNRANKED
  IRON
  BRONZE
  SILVER
  GOLD
  PLATINUM
  EMERALD
  DIAMOND
  MASTER
  GRANDMASTER
  CHALLENGER
}

enum Region {
  BR
  EUNE
  EUW
  LAN
  LAS
  NA
  OCE
  RU
  TR
  JP
  KR
  PH
  SG
  TW
  TH
  VN
  PBE
}

enum Role {
  USER
  ADMIN
}
